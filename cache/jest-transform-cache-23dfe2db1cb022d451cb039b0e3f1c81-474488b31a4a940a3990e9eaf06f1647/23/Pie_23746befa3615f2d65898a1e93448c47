146d3d97e6b04d7bd6a2e7a57eba312c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _art = require("@react-native-community/art");
var _Wedge = _interopRequireDefault(require("./Wedge"));
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/aidin/workspace/aidin36/react-native-pie-chart/src/Pie.tsx";
var Pie = function Pie(_ref) {
  var angle = _ref.angle,
    widthAndHeight = _ref.widthAndHeight,
    coverFill = _ref.coverFill,
    coverRadius = _ref.coverRadius,
    doughnut = _ref.doughnut,
    series = _ref.series,
    sliceColor = _ref.sliceColor,
    style = _ref.style;
  var handleCover = function handleCover() {
    if (!doughnut) {
      return null;
    }
    var radius = getRadius();
    var actualCoverRadius = widthAndHeight * coverRadius;
    var coverPath = new _art.Path().moveTo(radius, radius - actualCoverRadius / 2).arc(0, actualCoverRadius, 25).arc(0, -actualCoverRadius, 25).close();
    return (0, _jsxRuntime.jsx)(_art.Shape, {
      d: coverPath,
      fill: coverFill
    });
  };
  var getRadius = function getRadius() {
    return widthAndHeight / 2;
  };
  var radius = getRadius();
  var rotation = _reactNative.Platform.OS === 'ios' ? 0 : -90;
  return (0, _jsxRuntime.jsx)(_art.Surface, {
    style: style,
    width: widthAndHeight,
    height: widthAndHeight,
    children: (0, _jsxRuntime.jsxs)(_art.Group, {
      rotation: rotation,
      originX: radius,
      originY: radius,
      children: [Object.keys(series).flatMap(function (key) {
        if (angle[key] != angle[parseInt(key, 10) + 1]) {
          return [(0, _jsxRuntime.jsx)(_Wedge.default, {
            outerRadius: getRadius(),
            startAngle: angle[key],
            endAngle: angle[parseInt(key, 10) + 1],
            fill: sliceColor[key]
          }, key)];
        }
        return [];
      }), handleCover()]
    })
  });
};
var _default = Pie;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9yZWFjdCIsIl9yZWFjdE5hdGl2ZSIsIl9hcnQiLCJfV2VkZ2UiLCJfanN4UnVudGltZSIsIl90aGlzIiwiX2pzeEZpbGVOYW1lIiwiUGllIiwiX3JlZiIsImFuZ2xlIiwid2lkdGhBbmRIZWlnaHQiLCJjb3ZlckZpbGwiLCJjb3ZlclJhZGl1cyIsImRvdWdobnV0Iiwic2VyaWVzIiwic2xpY2VDb2xvciIsInN0eWxlIiwiaGFuZGxlQ292ZXIiLCJyYWRpdXMiLCJnZXRSYWRpdXMiLCJhY3R1YWxDb3ZlclJhZGl1cyIsImNvdmVyUGF0aCIsIlBhdGgiLCJtb3ZlVG8iLCJhcmMiLCJjbG9zZSIsImpzeCIsIlNoYXBlIiwiZCIsImZpbGwiLCJyb3RhdGlvbiIsIlBsYXRmb3JtIiwiT1MiLCJTdXJmYWNlIiwid2lkdGgiLCJoZWlnaHQiLCJjaGlsZHJlbiIsImpzeHMiLCJHcm91cCIsIm9yaWdpblgiLCJvcmlnaW5ZIiwia2V5cyIsImZsYXRNYXAiLCJrZXkiLCJwYXJzZUludCIsIm91dGVyUmFkaXVzIiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJQaWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ9cmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7ZXhwb3J0cy5kZWZhdWx0PXZvaWQgMDt2YXIgX3JlYWN0PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0XCIpKTt2YXIgX3JlYWN0TmF0aXZlPXJlcXVpcmUoXCJyZWFjdC1uYXRpdmVcIik7dmFyIF9hcnQ9cmVxdWlyZShcIkByZWFjdC1uYXRpdmUtY29tbXVuaXR5L2FydFwiKTt2YXIgX1dlZGdlPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vV2VkZ2VcIikpO3ZhciBfanN4UnVudGltZT1yZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7dmFyIF90aGlzPXRoaXMsX2pzeEZpbGVOYW1lPVwiL2hvbWUvYWlkaW4vd29ya3NwYWNlL2FpZGluMzYvcmVhY3QtbmF0aXZlLXBpZS1jaGFydC9zcmMvUGllLnRzeFwiO3ZhciBQaWU9ZnVuY3Rpb24gUGllKF9yZWYpe3ZhciBhbmdsZT1fcmVmLmFuZ2xlLHdpZHRoQW5kSGVpZ2h0PV9yZWYud2lkdGhBbmRIZWlnaHQsY292ZXJGaWxsPV9yZWYuY292ZXJGaWxsLGNvdmVyUmFkaXVzPV9yZWYuY292ZXJSYWRpdXMsZG91Z2hudXQ9X3JlZi5kb3VnaG51dCxzZXJpZXM9X3JlZi5zZXJpZXMsc2xpY2VDb2xvcj1fcmVmLnNsaWNlQ29sb3Isc3R5bGU9X3JlZi5zdHlsZTt2YXIgaGFuZGxlQ292ZXI9ZnVuY3Rpb24gaGFuZGxlQ292ZXIoKXtpZighZG91Z2hudXQpe3JldHVybiBudWxsO312YXIgcmFkaXVzPWdldFJhZGl1cygpO3ZhciBhY3R1YWxDb3ZlclJhZGl1cz13aWR0aEFuZEhlaWdodCpjb3ZlclJhZGl1czt2YXIgY292ZXJQYXRoPW5ldyBfYXJ0LlBhdGgoKS5tb3ZlVG8ocmFkaXVzLHJhZGl1cy1hY3R1YWxDb3ZlclJhZGl1cy8yKS5hcmMoMCxhY3R1YWxDb3ZlclJhZGl1cywyNSkuYXJjKDAsLWFjdHVhbENvdmVyUmFkaXVzLDI1KS5jbG9zZSgpO3JldHVybigwLF9qc3hSdW50aW1lLmpzeCkoX2FydC5TaGFwZSx7ZDpjb3ZlclBhdGgsZmlsbDpjb3ZlckZpbGx9KTt9O3ZhciBnZXRSYWRpdXM9ZnVuY3Rpb24gZ2V0UmFkaXVzKCl7cmV0dXJuIHdpZHRoQW5kSGVpZ2h0LzI7fTt2YXIgcmFkaXVzPWdldFJhZGl1cygpO3ZhciByb3RhdGlvbj1fcmVhY3ROYXRpdmUuUGxhdGZvcm0uT1M9PT0naW9zJz8wOi05MDtyZXR1cm4oMCxfanN4UnVudGltZS5qc3gpKF9hcnQuU3VyZmFjZSx7c3R5bGU6c3R5bGUsd2lkdGg6d2lkdGhBbmRIZWlnaHQsaGVpZ2h0OndpZHRoQW5kSGVpZ2h0LGNoaWxkcmVuOigwLF9qc3hSdW50aW1lLmpzeHMpKF9hcnQuR3JvdXAse3JvdGF0aW9uOnJvdGF0aW9uLG9yaWdpblg6cmFkaXVzLG9yaWdpblk6cmFkaXVzLGNoaWxkcmVuOltPYmplY3Qua2V5cyhzZXJpZXMpLmZsYXRNYXAoZnVuY3Rpb24oa2V5KXtpZihhbmdsZVtrZXldIT1hbmdsZVtwYXJzZUludChrZXksMTApKzFdKXtyZXR1cm5bKDAsX2pzeFJ1bnRpbWUuanN4KShfV2VkZ2UuZGVmYXVsdCx7b3V0ZXJSYWRpdXM6Z2V0UmFkaXVzKCksc3RhcnRBbmdsZTphbmdsZVtrZXldLGVuZEFuZ2xlOmFuZ2xlW3BhcnNlSW50KGtleSwxMCkrMV0sZmlsbDpzbGljZUNvbG9yW2tleV19LGtleSldO31yZXR1cm5bXTt9KSxoYW5kbGVDb3ZlcigpXX0pfSk7fTt2YXIgX2RlZmF1bHQ9UGllO2V4cG9ydHMuZGVmYXVsdD1fZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLHNCQUFzQixHQUFDQyxPQUFPLENBQUMsOENBQThDLENBQUM7QUFBQ0MsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBQyxZQUFZLEVBQUM7RUFBQ0MsS0FBSyxFQUFDO0FBQUksQ0FBQyxDQUFDO0FBQUNELE9BQU8sQ0FBQ0UsT0FBTyxHQUFDLEtBQUssQ0FBQztBQUFDLElBQUlDLE1BQU0sR0FBQ1Asc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUFDLElBQUlPLFlBQVksR0FBQ1AsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUFDLElBQUlRLElBQUksR0FBQ1IsT0FBTyxDQUFDLDZCQUE2QixDQUFDO0FBQUMsSUFBSVMsTUFB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