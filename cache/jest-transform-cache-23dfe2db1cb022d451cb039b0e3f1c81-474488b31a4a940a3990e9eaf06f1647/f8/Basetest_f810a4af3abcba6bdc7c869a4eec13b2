f13fce44a04951583c5ee3f07a0620b7
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: jest.fn().mockReturnValue({
      navigate: jest.fn()
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _Base = _interopRequireDefault(require("../Base"));
var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));
var enzyme = _interopRequireWildcard(require("enzyme"));
var _native = require("@react-navigation/native");
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
enzyme.configure({
  adapter: new _enzymeAdapterReact.default()
});
var navigation = (0, _native.useNavigation)();
describe('should render a form with three text inputs, two selections, and one submit', function () {
  var wrapper;
  beforeEach(function () {
    wrapper = (0, enzyme.shallow)((0, _jsxRuntime.jsx)(_Base.default, {}));
  });
  it('component renders correctly', function () {
    expect(wrapper.length).toBe(1);
  });
  it('should update the name state upon text input', function () {
    var nameInput = wrapper.find(_reactNative.TextInput).at(0).simulate('changeText', 'chandrakanth');
    console.log(nameInput);
    expect(wrapper.prop('name')).toEqual('chandrakanth');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VOYXZpZ2F0aW9uIiwiamVzdCIsImZuIiwibW9ja1JldHVyblZhbHVlIiwibmF2aWdhdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9CYXNlIiwiX2VuenltZUFkYXB0ZXJSZWFjdCIsImVuenltZSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX25hdGl2ZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9yZXF1aXJlIiwiY29uZmlndXJlIiwiYWRhcHRlciIsIkFkYXB0ZXIiLCJuYXZpZ2F0aW9uIiwiZGVzY3JpYmUiLCJ3cmFwcGVyIiwiYmVmb3JlRWFjaCIsInNoYWxsb3ciLCJqc3giLCJpdCIsImV4cGVjdCIsImxlbmd0aCIsInRvQmUiLCJuYW1lSW5wdXQiLCJmaW5kIiwiVGV4dElucHV0IiwiYXQiLCJzaW11bGF0ZSIsImNvbnNvbGUiLCJsb2ciLCJwcm9wIiwidG9FcXVhbCJdLCJzb3VyY2VzIjpbIkJhc2UudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2UgZnJvbSAnLi4vQmFzZSc7XHJcbmltcG9ydCBBZGFwdGVyIGZyb20gJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2JztcclxuaW1wb3J0IHttb3VudCwgc2hhbGxvd30gZnJvbSAnZW56eW1lJztcclxuaW1wb3J0ICogYXMgZW56eW1lIGZyb20gJ2VuenltZSc7XHJcbmltcG9ydCB7dXNlTmF2aWdhdGlvbn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJztcclxuaW1wb3J0IHtOYXRpdmVTdGFja05hdmlnYXRpb25Qcm9wfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUtc3RhY2svbGliL3R5cGVzY3JpcHQvc3JjL3R5cGVzJztcclxuaW1wb3J0IHtUZXh0SW5wdXQsIEJ1dHRvbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHtRdWl6Q29udGV4dH0gZnJvbSAnLi8uLi9RdWl6Q29udGV4dCc7XHJcbmVuenltZS5jb25maWd1cmUoe2FkYXB0ZXI6IG5ldyBBZGFwdGVyKCl9KTtcclxuY29uc3QgbmF2aWdhdGlvbiA9IHVzZU5hdmlnYXRpb248TmF0aXZlU3RhY2tOYXZpZ2F0aW9uUHJvcDxhbnk+PigpO1xyXG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZScsICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgdXNlTmF2aWdhdGlvbjogamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZSh7XHJcbiAgICAgIG5hdmlnYXRlOiBqZXN0LmZuKCksXHJcbiAgICB9KSxcclxuICB9O1xyXG59KTtcclxuZGVzY3JpYmUoJ3Nob3VsZCByZW5kZXIgYSBmb3JtIHdpdGggdGhyZWUgdGV4dCBpbnB1dHMsIHR3byBzZWxlY3Rpb25zLCBhbmQgb25lIHN1Ym1pdCcsICgpID0+IHtcclxuICBsZXQgd3JhcHBlcjogYW55O1xyXG5cclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIHdyYXBwZXIgPSBzaGFsbG93KDxCYXNlIC8+KTtcclxuICB9KTtcclxuICBpdCgnY29tcG9uZW50IHJlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KHdyYXBwZXIubGVuZ3RoKS50b0JlKDEpO1xyXG4gIH0pO1xyXG4gIGl0KCdzaG91bGQgdXBkYXRlIHRoZSBuYW1lIHN0YXRlIHVwb24gdGV4dCBpbnB1dCcsICgpID0+IHtcclxuICAgIGNvbnN0IG5hbWVJbnB1dCA9IHdyYXBwZXJcclxuICAgICAgLmZpbmQoVGV4dElucHV0KVxyXG4gICAgICAuYXQoMClcclxuICAgICAgLnNpbXVsYXRlKCdjaGFuZ2VUZXh0JywgJ2NoYW5kcmFrYW50aCcpO1xyXG4gICAgY29uc29sZS5sb2cobmFtZUlucHV0KTtcclxuICAgIGV4cGVjdCh3cmFwcGVyLnByb3AoJ25hbWUnKSkudG9FcXVhbCgnY2hhbmRyYWthbnRoJyk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQVVBQSxXQUFBLEdBQUtDLElBQUksQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0VBQzFDLE9BQU87SUFDTEMsYUFBYSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsRUFBRSxDQUFDQyxlQUFlLENBQUM7TUFDdkNDLFFBQVEsRUFBRUgsSUFBSSxDQUFDQyxFQUFFO0lBQ25CLENBQUM7RUFDSCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBQUMsSUFBQUcsc0JBQUEsR0FBQUMsT0FBQTtBQWhCSCxJQUFBQyxLQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxtQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBQyx1QkFBQSxDQUFBSixPQUFBO0FBRUEsSUFBQUssT0FBQSxHQUFBTCxPQUFBO0FBRUEsSUFBQU0sWUFBQSxHQUFBTixPQUFBO0FBQStDLElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUFBLFNBQUFRLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBTCx3QkFBQVMsR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdB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