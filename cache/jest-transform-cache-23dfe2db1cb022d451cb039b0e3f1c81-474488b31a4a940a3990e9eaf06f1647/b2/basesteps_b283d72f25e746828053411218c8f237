1271957a2d0f330398ecfddee28ab817
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
require("react-native-get-random-values");
var _uuid = require("uuid");
var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));
var enzyme = _interopRequireWildcard(require("enzyme"));
var _Base = _interopRequireDefault(require("../../Apps/Base"));
var _jestCucumber = require("jest-cucumber");
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var uuid = (0, _uuid.v4)();
var feature = (0, _jestCucumber.loadFeature)('./features/base.feature');
enzyme.configure({
  adapter: new _enzymeAdapterReact.default()
});
(0, _jestCucumber.defineFeature)(feature, function (test) {
  var mockQuizContext = {
    score: 7,
    setScore: jest.fn(),
    name: 'chandu',
    setName: jest.fn(),
    email: 'chandra@chandu.com',
    setMail: jest.fn(),
    phone: '1234567890',
    setPhone: jest.fn(),
    selectedValue: 'ReactJS',
    setSelected: jest.fn(),
    trackScore: true,
    setTracker: jest.fn()
  };
  test('User submits form with invalid email', function (_ref) {
    var given = _ref.given,
      when = _ref.when,
      and = _ref.and,
      then = _ref.then;
    given('I am on the base screen', (0, _asyncToGenerator2.default)(function* () {
      var wrapper;
      wrapper = (0, enzyme.shallow)((0, _jsxRuntime.jsx)(_Base.default, {}));
      expect(wrapper.find(_reactNative2.View).at(0)).toBeDefind();
    }));
    when('I enter an invalid mail {string}', function () {
      var _ref3 = (0, _asyncToGenerator2.default)(function* (invalidEmail) {
        var wrapper;
        wrapper = (0, enzyme.shallow)((0, _jsxRuntime.jsx)(_Base.default, {}));
        var email = wrapper.find(_reactNative2.TextInput).at(0);
        _reactNative.fireEvent.changeText(email, invalidEmail);
      });
      return function (_x) {
        return _ref3.apply(this, arguments);
      };
    }());
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3V1aWQiLCJfZW56eW1lQWRhcHRlclJlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsImVuenltZSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX0Jhc2UiLCJfamVzdEN1Y3VtYmVyIiwiX3JlYWN0TmF0aXZlMiIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsInV1aWQiLCJ1dWlkdjQiLCJmZWF0dXJlIiwibG9hZEZlYXR1cmUiLCJjb25maWd1cmUiLCJhZGFwdGVyIiwiQWRhcHRlciIsImRlZmluZUZlYXR1cmUiLCJ0ZXN0IiwibW9ja1F1aXpDb250ZXh0Iiwic2NvcmUiLCJzZXRTY29yZSIsImplc3QiLCJmbiIsIm5hbWUiLCJzZXROYW1lIiwiZW1haWwiLCJzZXRNYWlsIiwicGhvbmUiLCJzZXRQaG9uZSIsInNlbGVjdGVkVmFsdWUiLCJzZXRTZWxlY3RlZCIsInRyYWNrU2NvcmUiLCJzZXRUcmFja2VyIiwiX3JlZiIsImdpdmVuIiwid2hlbiIsImFuZCIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJ3cmFwcGVyIiwic2hhbGxvdyIsImpzeCIsImV4cGVjdCIsImZpbmQiLCJWaWV3IiwiYXQiLCJ0b0JlRGVmaW5kIiwiX3JlZjMiLCJpbnZhbGlkRW1haWwiLCJUZXh0SW5wdXQiLCJmaXJlRXZlbnQiLCJjaGFuZ2VUZXh0IiwiX3giLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VzIjpbImJhc2Uuc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3J9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuaW1wb3J0ICdyZWFjdC1uYXRpdmUtZ2V0LXJhbmRvbS12YWx1ZXMnO1xyXG5pbXBvcnQge3Y0IGFzIHV1aWR2NH0gZnJvbSAndXVpZCc7XHJcbmltcG9ydCBBZGFwdGVyIGZyb20gJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2JztcclxuaW1wb3J0IHttb3VudCwgc2hhbGxvd30gZnJvbSAnZW56eW1lJztcclxuaW1wb3J0ICogYXMgZW56eW1lIGZyb20gJ2VuenltZSc7XHJcbmltcG9ydCBCYXNlIGZyb20gJy4uLy4uL0FwcHMvQmFzZSc7XHJcbmltcG9ydCB7bG9hZEZlYXR1cmUsIGRlZmluZUZlYXR1cmV9IGZyb20gJ2plc3QtY3VjdW1iZXInO1xyXG5pbXBvcnQge1F1aXpDb250ZXh0fSBmcm9tICcuLy4uLy4uL0FwcHMvUXVpekNvbnRleHQnO1xyXG5pbXBvcnQge1ZpZXcsIFRleHRJbnB1dH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuY29uc3QgdXVpZCA9IHV1aWR2NCgpO1xyXG5jb25zdCBmZWF0dXJlID0gbG9hZEZlYXR1cmUoJy4vZmVhdHVyZXMvYmFzZS5mZWF0dXJlJyk7XHJcbmVuenltZS5jb25maWd1cmUoe2FkYXB0ZXI6IG5ldyBBZGFwdGVyKCl9KTtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCB0ZXN0ID0+IHtcclxuICBjb25zdCBtb2NrUXVpekNvbnRleHQgPSB7XHJcbiAgICBzY29yZTogNyxcclxuICAgIHNldFNjb3JlOiBqZXN0LmZuKCksXHJcbiAgICBuYW1lOiAnY2hhbmR1JyxcclxuICAgIHNldE5hbWU6IGplc3QuZm4oKSxcclxuICAgIGVtYWlsOiAnY2hhbmRyYUBjaGFuZHUuY29tJyxcclxuICAgIHNldE1haWw6IGplc3QuZm4oKSxcclxuICAgIHBob25lOiAnMTIzNDU2Nzg5MCcsXHJcbiAgICBzZXRQaG9uZTogamVzdC5mbigpLFxyXG4gICAgc2VsZWN0ZWRWYWx1ZTogJ1JlYWN0SlMnLFxyXG4gICAgc2V0U2VsZWN0ZWQ6IGplc3QuZm4oKSxcclxuICAgIHRyYWNrU2NvcmU6IHRydWUsXHJcbiAgICBzZXRUcmFja2VyOiBqZXN0LmZuKCksXHJcbiAgfTtcclxuXHJcbiAgdGVzdCgnVXNlciBzdWJtaXRzIGZvcm0gd2l0aCBpbnZhbGlkIGVtYWlsJywgKHtnaXZlbiwgd2hlbiwgYW5kLCB0aGVufSkgPT4ge1xyXG4gICAgZ2l2ZW4oJ0kgYW0gb24gdGhlIGJhc2Ugc2NyZWVuJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICBsZXQgd3JhcHBlcjogYW55O1xyXG4gICAgICB3cmFwcGVyID0gc2hhbGxvdyg8QmFzZSAvPik7XHJcbiAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoVmlldykuYXQoMCkpLnRvQmVEZWZpbmQoKTtcclxuICAgIH0pO1xyXG4gICAgd2hlbignSSBlbnRlciBhbiBpbnZhbGlkIG1haWwge3N0cmluZ30nLCBhc3luYyBpbnZhbGlkRW1haWwgPT4ge1xyXG4gICAgICBsZXQgd3JhcHBlcjogYW55O1xyXG4gICAgICB3cmFwcGVyID0gc2hhbGxvdyg8QmFzZSAvPik7XHJcbiAgICAgIGNvbnN0IGVtYWlsID0gd3JhcHBlci5maW5kKFRleHRJbnB1dCkuYXQoMCk7XHJcbiAgICAgIGZpcmVFdmVudC5jaGFuZ2VUZXh0KGVtYWlsLCBpbnZhbGlkRW1haWwpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxtQkFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksTUFBQSxHQUFB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