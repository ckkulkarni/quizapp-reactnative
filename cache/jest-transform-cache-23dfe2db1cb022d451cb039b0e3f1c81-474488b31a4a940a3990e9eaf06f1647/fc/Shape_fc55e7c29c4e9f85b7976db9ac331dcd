0c5a2a089bc2cb98c862882069e91189
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var React = _interopRequireWildcard(require("react"));
var _nativeComponents = require("./nativeComponents");
var _ARTSerializablePath = _interopRequireDefault(require("./ARTSerializablePath"));
var _helpers = require("./helpers");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Shape = function (_React$Component) {
  (0, _inherits2.default)(Shape, _React$Component);
  var _super = _createSuper(Shape);
  function Shape() {
    (0, _classCallCheck2.default)(this, Shape);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Shape, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var path = props.d || (0, _helpers.childrenAsString)(props.children);
      var d = (path instanceof _ARTSerializablePath.default ? path : new _ARTSerializablePath.default(path)).toJSON();
      return (0, _jsxRuntime.jsx)(_nativeComponents.NativeShape, {
        fill: (0, _helpers.extractBrush)(props.fill, props),
        opacity: (0, _helpers.extractOpacity)(props),
        stroke: (0, _helpers.extractColor)(props.stroke),
        strokeCap: (0, _helpers.extractStrokeCap)(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: (0, _helpers.extractStrokeJoin)(props.strokeJoin),
        strokeWidth: props.strokeWidth,
        transform: (0, _helpers.extractTransform)(props),
        shadow: (0, _helpers.extractShadow)(this.props),
        d: d
      });
    }
  }]);
  return Shape;
}(React.Component);
exports.default = Shape;
Shape.defaultProps = {
  strokeWidth: 1,
  width: 0,
  height: 0
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9uYXRpdmVDb21wb25lbnRzIiwiX0FSVFNlcmlhbGl6YWJsZVBhdGgiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2hlbHBlcnMiLCJfanN4UnVudGltZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiX2dldFByb3RvdHlwZU9mMiIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5IiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInZhbHVlT2YiLCJlIiwiU2hhcGUiLCJfUmVhY3QkQ29tcG9uZW50IiwiX2luaGVyaXRzMiIsIl9zdXBlciIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwidmFsdWUiLCJyZW5kZXIiLCJwcm9wcyIsInBhdGgiLCJkIiwiY2hpbGRyZW5Bc1N0cmluZyIsImNoaWxkcmVuIiwiUGF0aCIsInRvSlNPTiIsImpzeCIsIk5hdGl2ZVNoYXBlIiwiZmlsbCIsImV4dHJhY3RCcnVzaCIsIm9wYWNpdHkiLCJleHRyYWN0T3BhY2l0eSIsInN0cm9rZSIsImV4dHJhY3RDb2xvciIsInN0cm9rZUNhcCIsImV4dHJhY3RTdHJva2VDYXAiLCJzdHJva2VEYXNoIiwic3Ryb2tlSm9pbiIsImV4dHJhY3RTdHJva2VKb2luIiwic3Ryb2tlV2lkdGgiLCJ0cmFuc2Zvcm0iLCJleHRyYWN0VHJhbnNmb3JtIiwic2hhZG93IiwiZXh0cmFjdFNoYWRvdyIsIkNvbXBvbmVudCIsImV4cG9ydHMiLCJkZWZhdWx0UHJvcHMiLCJ3aWR0aCIsImhlaWdodCJdLCJzb3VyY2VzIjpbIlNoYXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge05hdGl2ZVNoYXBlfSBmcm9tICcuL25hdGl2ZUNvbXBvbmVudHMnO1xuaW1wb3J0IFBhdGggZnJvbSAnLi9BUlRTZXJpYWxpemFibGVQYXRoJztcbmltcG9ydCB7XG4gIGV4dHJhY3RUcmFuc2Zvcm0sXG4gIGV4dHJhY3RTaGFkb3csXG4gIGV4dHJhY3RPcGFjaXR5LFxuICBjaGlsZHJlbkFzU3RyaW5nLFxuICBleHRyYWN0Q29sb3IsXG4gIGV4dHJhY3RTdHJva2VKb2luLFxuICBleHRyYWN0U3Ryb2tlQ2FwLFxuICBleHRyYWN0QnJ1c2gsXG59IGZyb20gJy4vaGVscGVycyc7XG5pbXBvcnQgdHlwZSB7XG4gIFRyYW5zZm9ybVByb3BzLFxuICBTaGFkb3dQcm9wcyxcbiAgT3BhY2l0eVByb3BzLFxuICBTdHJva2VKb2luLFxuICBTdHJva2VDYXAsXG4gIEJydXNoLFxufSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IHR5cGUgU2hhcGVQcm9wcyA9IFRyYW5zZm9ybVByb3BzICZcbiAgU2hhZG93UHJvcHMgJlxuICBPcGFjaXR5UHJvcHMgJiB7XG4gICAgZmlsbD86IHN0cmluZyB8IEJydXNoLFxuICAgIHN0cm9rZT86IHN0cmluZyxcbiAgICBzdHJva2VDYXA/OiBTdHJva2VDYXAsXG4gICAgc3Ryb2tlRGFzaD86IEFycmF5PG51bWJlcj4sXG4gICAgc3Ryb2tlSm9pbj86IFN0cm9rZUpvaW4sXG4gICAgc3Ryb2tlV2lkdGg6IG51bWJlcixcbiAgICBjaGlsZHJlbj86IFJlYWN0Lk5vZGUsXG4gICAgZD86IHN0cmluZyB8IFBhdGgsXG4gICAgY2hpbGRyZW4/OiBzdHJpbmcgfCBBcnJheTxzdHJpbmc+LFxuICAgIHdpZHRoOiBudW1iZXIsXG4gICAgaGVpZ2h0OiBudW1iZXIsXG4gIH07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNoYXBlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFNoYXBlUHJvcHM+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzdHJva2VXaWR0aDogMSxcbiAgICB3aWR0aDogMCxcbiAgICBoZWlnaHQ6IDAsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwYXRoID0gcHJvcHMuZCB8fCBjaGlsZHJlbkFzU3RyaW5nKHByb3BzLmNoaWxkcmVuKTtcbiAgICBjb25zdCBkID0gKHBhdGggaW5zdGFuY2VvZiBQYXRoID8gcGF0aCA6IG5ldyBQYXRoKHBhdGgpKS50b0pTT04oKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8TmF0aXZlU2hhcGVcbiAgICAgICAgZmlsbD17ZXh0cmFjdEJydXNoKHByb3BzLmZpbGwsIHByb3BzKX1cbiAgICAgICAgb3BhY2l0eT17ZXh0cmFjdE9wYWNpdHkocHJvcHMpfVxuICAgICAgICBzdHJva2U9e2V4dHJhY3RDb2xvcihwcm9wcy5zdHJva2UpfVxuICAgICAgICBzdHJva2VDYXA9e2V4dHJhY3RTdHJva2VDYXAocHJvcHMuc3Ryb2tlQ2FwKX1cbiAgICAgICAgc3Ryb2tlRGFzaD17cHJvcHMuc3Ryb2tlRGFzaCB8fCBudWxsfVxuICAgICAgICBzdHJva2VKb2luPXtleHRyYWN0U3Ryb2tlSm9pbihwcm9wcy5zdHJva2VKb2luKX1cbiAgICAgICAgc3Ryb2tlV2lkdGg9e3Byb3BzLnN0cm9rZVdpZHRofVxuICAgICAgICB0cmFuc2Zvcm09e2V4dHJhY3RUcmFuc2Zvcm0ocHJvcHMpfVxuICAgICAgICBzaGFkb3c9e2V4dHJhY3RTaGFkb3codGhpcy5wcm9wcyl9XG4gICAgICAgIGQ9e2R9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQVNBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxvQkFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksUUFBQSxHQUFBSixPQUFBO0FBU21CLElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUFBLFNBQUFNLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBUix3QkFBQVksR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBLDRCQUFBRSxPQUFBLEVBQUFGLEdBQUEsVUFBQUcsS0FBQSxHQUFBUix3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