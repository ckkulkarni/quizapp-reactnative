{"version":3,"names":["_getJestObj","mock","useNavigation","jest","fn","mockReturnValue","navigate","_interopRequireDefault","require","_asyncToGenerator2","_Question","_enzymeAdapterReact","enzyme","_interopRequireWildcard","_native","_react","_reactNative","_QuizContext","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_require","configure","adapter","Adapter","navigation","describe","mockQuizContext","score","setScore","name","setName","email","setMail","phone","setPhone","selectedValue","setSelected","trackScore","setTracker","it","screen","render","jsx","QuizContext","Provider","value","children","questionText","getByTestId","expect","props","toBe","waitFor","answer0","answer1","answer2","answer3","fireEvent","press","toBeCalledWith"],"sources":["Question1.test.tsx"],"sourcesContent":["import Question1 from '../Question1';\r\nimport Adapter from 'enzyme-adapter-react-16';\r\nimport * as enzyme from 'enzyme';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack/lib/typescript/src/types';\r\nimport React from 'react';\r\nimport {fireEvent, render, waitFor} from '@testing-library/react-native';\r\nimport {QuizContext} from './../QuizContext';\r\nenzyme.configure({adapter: new Adapter()});\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\n\r\ndescribe('Question 1 component', () => {\r\n  const mockQuizContext = {\r\n    score: 0,\r\n    setScore: jest.fn(),\r\n    name: 'chandu',\r\n    setName: jest.fn(),\r\n    email: 'chandra@chandu.com',\r\n    setMail: jest.fn(),\r\n    phone: '1234567890',\r\n    setPhone: jest.fn(),\r\n    selectedValue: 'ReactJS',\r\n    setSelected: jest.fn(),\r\n    trackScore: true,\r\n    setTracker: jest.fn(),\r\n  };\r\n\r\n  it(\"the question is correct assuming that selectedValue state is equal to 'ReactJS'\", () => {\r\n    const screen = render(\r\n      <QuizContext.Provider value={mockQuizContext}>\r\n        <Question1 />\r\n      </QuizContext.Provider>,\r\n    );\r\n    const questionText = screen.getByTestId('questionID');\r\n    expect(questionText.props.children).toBe(\r\n      'What is the extension used for TypeScript in ReactJS?',\r\n    );\r\n  });\r\n  it('the answers are rendered correctly, assuming that the selected state value is ReactJS', async () => {\r\n    await waitFor(() => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question1 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      const answer0 = screen.getByTestId('answer-0');\r\n      const answer1 = screen.getByTestId('answer-1');\r\n      const answer2 = screen.getByTestId('answer-2');\r\n      const answer3 = screen.getByTestId('answer-3');\r\n      expect(answer0.props.children).toBe('.tsx');\r\n      expect(answer1.props.children).toBe('.jsx');\r\n      expect(answer2.props.children).toBe('.js');\r\n      expect(answer3.props.children).toBe('.java');\r\n    });\r\n  });\r\n  it('should update the score when the right answer is pressed', async () => {\r\n    await waitFor(() => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question1 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      fireEvent.press(screen.getByTestId('answer-0'));\r\n      const score = screen.getByTestId('score');\r\n      expect(score.props.children[1]).toBe(0);\r\n    });\r\n  });\r\n  it('score should remain the same when the wrong answer is pressed', async () => {\r\n    await waitFor(() => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question1 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      fireEvent.press(screen.getByTestId('answer-1'));\r\n      expect(screen.getByTestId('score').props.children[1]).toBe(0);\r\n    });\r\n  });\r\n  it('when the next question button is pressed, the user should navigate to the next screen', async () => {\r\n    await waitFor(() => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question1 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      fireEvent.press(screen.getByTestId('question2'));\r\n      expect(navigation.navigate).toBeCalledWith('Question 2');\r\n    });\r\n  });\r\n  it('when one of the numbers at the top are pressed, it should navigate to the pressed question', async () => {\r\n    await waitFor(() => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question1 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      fireEvent.press(screen.getByTestId('navigate-to-1'));\r\n      expect(navigation.navigate).toBeCalledWith('Question 2');\r\n      fireEvent.press(screen.getByTestId('navigate-to-2'));\r\n      expect(navigation.navigate).toBeCalledWith('Question 3');\r\n      fireEvent.press(screen.getByTestId('navigate-to-3'));\r\n      expect(navigation.navigate).toBeCalledWith('Question 4');\r\n      fireEvent.press(screen.getByTestId('navigate-to-4'));\r\n      expect(navigation.navigate).toBeCalledWith('Question 5');\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}