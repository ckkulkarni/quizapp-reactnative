044fa04c62935862e0f20376b528d4ac
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: jest.fn().mockReturnValue({
      navigate: jest.fn(),
      goBack: jest.fn()
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _native = require("@react-navigation/native");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _QuizContext = require("./../QuizContext");
require("@testing-library/jest-dom");
require("@testing-library/jest-dom/extend-expect");
var _SubmitScreen = _interopRequireDefault(require("./../SubmitScreen"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var navigation = (0, _native.useNavigation)();
describe('Final screen', function () {
  var mockQuizContext = {
    score: 0,
    setScore: jest.fn(),
    name: 'chandu',
    setName: jest.fn(),
    email: 'chandra@chandu.com',
    setMail: jest.fn(),
    phone: '1234567890',
    setPhone: jest.fn(),
    selectedValue: 'ReactJS',
    setSelected: jest.fn(),
    trackScore: true,
    setTracker: jest.fn()
  };
  it('screen renders correctly', (0, _asyncToGenerator2.default)(function* () {
    yield (0, _reactNative.waitFor)(function () {
      var screen = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_QuizContext.QuizContext.Provider, {
        value: mockQuizContext,
        children: (0, _jsxRuntime.jsx)(_SubmitScreen.default, {})
      }));
      expect(screen.getByTestId('scoreContainer')).toBeDefined();
    });
  }));
  it('the details render properly', (0, _asyncToGenerator2.default)(function* () {
    yield (0, _reactNative.waitFor)(function () {
      var screen = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_QuizContext.QuizContext.Provider, {
        value: mockQuizContext,
        children: (0, _jsxRuntime.jsx)(_SubmitScreen.default, {})
      }));
      expect(screen.getByTestId('score')).toBe(0);
      expect(screen.getByTestId('selectedStream')).toBe('ReactJS');
      expect(screen.getByTestId('name')).toBe('chandu');
      expect(screen.getByTestId('mail')).toBe('chandra@chandu.com');
      expect(screen.getByTestId('phoneNo')).toBe('1234567890');
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VOYXZpZ2F0aW9uIiwiamVzdCIsImZuIiwibW9ja1JldHVyblZhbHVlIiwibmF2aWdhdGUiLCJnb0JhY2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9uYXRpdmUiLCJfcmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJfUXVpekNvbnRleHQiLCJfU3VibWl0U2NyZWVuIiwiX2pzeFJ1bnRpbWUiLCJfcmVxdWlyZSIsIm5hdmlnYXRpb24iLCJkZXNjcmliZSIsIm1vY2tRdWl6Q29udGV4dCIsInNjb3JlIiwic2V0U2NvcmUiLCJuYW1lIiwic2V0TmFtZSIsImVtYWlsIiwic2V0TWFpbCIsInBob25lIiwic2V0UGhvbmUiLCJzZWxlY3RlZFZhbHVlIiwic2V0U2VsZWN0ZWQiLCJ0cmFja1Njb3JlIiwic2V0VHJhY2tlciIsIml0IiwiZGVmYXVsdCIsIndhaXRGb3IiLCJzY3JlZW4iLCJyZW5kZXIiLCJqc3giLCJRdWl6Q29udGV4dCIsIlByb3ZpZGVyIiwidmFsdWUiLCJjaGlsZHJlbiIsImV4cGVjdCIsImdldEJ5VGVzdElkIiwidG9CZURlZmluZWQiLCJ0b0JlIl0sInNvdXJjZXMiOlsiU3VibWl0U2NyZWVuLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXNlTmF2aWdhdGlvbn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJztcclxuaW1wb3J0IHtOYXRpdmVTdGFja05hdmlnYXRpb25Qcm9wfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUtc3RhY2svbGliL3R5cGVzY3JpcHQvc3JjL3R5cGVzJztcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvcn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQge1F1aXpDb250ZXh0fSBmcm9tICcuLy4uL1F1aXpDb250ZXh0JztcclxuaW1wb3J0ICdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tJztcclxuaW1wb3J0ICdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3QnO1xyXG5pbXBvcnQge1RleHR9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCBTdWJtaXRTY3JlZW4gZnJvbSAnLi8uLi9TdWJtaXRTY3JlZW4nO1xyXG5jb25zdCBuYXZpZ2F0aW9uID0gdXNlTmF2aWdhdGlvbjxOYXRpdmVTdGFja05hdmlnYXRpb25Qcm9wPGFueT4+KCk7XHJcblxyXG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZScsICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgdXNlTmF2aWdhdGlvbjogamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZSh7XHJcbiAgICAgIG5hdmlnYXRlOiBqZXN0LmZuKCksXHJcbiAgICAgIGdvQmFjazogamVzdC5mbigpLFxyXG4gICAgfSksXHJcbiAgfTtcclxufSk7XHJcbmRlc2NyaWJlKCdGaW5hbCBzY3JlZW4nLCAoKSA9PiB7XHJcbiAgY29uc3QgbW9ja1F1aXpDb250ZXh0ID0ge1xyXG4gICAgc2NvcmU6IDAsXHJcbiAgICBzZXRTY29yZTogamVzdC5mbigpLFxyXG4gICAgbmFtZTogJ2NoYW5kdScsXHJcbiAgICBzZXROYW1lOiBqZXN0LmZuKCksXHJcbiAgICBlbWFpbDogJ2NoYW5kcmFAY2hhbmR1LmNvbScsXHJcbiAgICBzZXRNYWlsOiBqZXN0LmZuKCksXHJcbiAgICBwaG9uZTogJzEyMzQ1Njc4OTAnLFxyXG4gICAgc2V0UGhvbmU6IGplc3QuZm4oKSxcclxuICAgIHNlbGVjdGVkVmFsdWU6ICdSZWFjdEpTJyxcclxuICAgIHNldFNlbGVjdGVkOiBqZXN0LmZuKCksXHJcbiAgICB0cmFja1Njb3JlOiB0cnVlLFxyXG4gICAgc2V0VHJhY2tlcjogamVzdC5mbigpLFxyXG4gIH07XHJcbiAgaXQoJ3NjcmVlbiByZW5kZXJzIGNvcnJlY3RseScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xyXG4gICAgICBjb25zdCBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgICAgPFF1aXpDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXttb2NrUXVpekNvbnRleHR9PlxyXG4gICAgICAgICAgPFN1Ym1pdFNjcmVlbiAvPlxyXG4gICAgICAgIDwvUXVpekNvbnRleHQuUHJvdmlkZXI+LFxyXG4gICAgICApO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzY29yZUNvbnRhaW5lcicpKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbiAgaXQoJ3RoZSBkZXRhaWxzIHJlbmRlciBwcm9wZXJseScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xyXG4gICAgICBjb25zdCBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgICAgPFF1aXpDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXttb2NrUXVpekNvbnRleHR9PlxyXG4gICAgICAgICAgPFN1Ym1pdFNjcmVlbiAvPlxyXG4gICAgICAgIDwvUXVpekNvbnRleHQuUHJvdmlkZXI+LFxyXG4gICAgICApO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzY29yZScpKS50b0JlKDApO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzZWxlY3RlZFN0cmVhbScpKS50b0JlKCdSZWFjdEpTJyk7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ25hbWUnKSkudG9CZSgnY2hhbmR1Jyk7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ21haWwnKSkudG9CZSgnY2hhbmRyYUBjaGFuZHUuY29tJyk7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3Bob25lTm8nKSkudG9CZSgnMTIzNDU2Nzg5MCcp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