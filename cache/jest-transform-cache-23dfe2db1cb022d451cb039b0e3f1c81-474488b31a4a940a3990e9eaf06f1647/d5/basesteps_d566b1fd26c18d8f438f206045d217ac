762b62885a033ff0fe144f0b745fae53
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
require("react-native-get-random-values");
var _uuid = require("uuid");
var _Base = _interopRequireDefault(require("../../Apps/Base"));
var _jestCucumber = require("jest-cucumber");
var _QuizContext = require("./../../Apps/QuizContext");
var _jsxRuntime = require("react/jsx-runtime");
var uuid = (0, _uuid.v4)();
var feature = (0, _jestCucumber.loadFeature)('./features/base.feature');
(0, _jestCucumber.defineFeature)(feature, function (test) {
  var mockQuizContext = {
    score: 7,
    setScore: jest.fn(),
    name: 'chandu',
    setName: jest.fn(),
    email: 'chandra@chandu.com',
    setMail: jest.fn(),
    phone: '1234567890',
    setPhone: jest.fn(),
    selectedValue: 'ReactJS',
    setSelected: jest.fn(),
    trackScore: true,
    setTracker: jest.fn()
  };
  test('User submits form with invalid email', function (_ref) {
    var given = _ref.given,
      when = _ref.when,
      and = _ref.and,
      then = _ref.then;
    given('I am on the base screen', (0, _asyncToGenerator2.default)(function* () {
      yield (0, _reactNative.waitFor)(function () {
        var screen = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_QuizContext.QuizContext.Provider, {
          value: mockQuizContext,
          children: (0, _jsxRuntime.jsx)(_Base.default, {})
        }));
      });
    }));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3V1aWQiLCJfQmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfamVzdEN1Y3VtYmVyIiwiX1F1aXpDb250ZXh0IiwiX2pzeFJ1bnRpbWUiLCJ1dWlkIiwidXVpZHY0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJtb2NrUXVpekNvbnRleHQiLCJzY29yZSIsInNldFNjb3JlIiwiamVzdCIsImZuIiwibmFtZSIsInNldE5hbWUiLCJlbWFpbCIsInNldE1haWwiLCJwaG9uZSIsInNldFBob25lIiwic2VsZWN0ZWRWYWx1ZSIsInNldFNlbGVjdGVkIiwidHJhY2tTY29yZSIsInNldFRyYWNrZXIiLCJfcmVmIiwiZ2l2ZW4iLCJ3aGVuIiwiYW5kIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJ3YWl0Rm9yIiwic2NyZWVuIiwicmVuZGVyIiwianN4IiwiUXVpekNvbnRleHQiLCJQcm92aWRlciIsInZhbHVlIiwiY2hpbGRyZW4iXSwic291cmNlcyI6WyJiYXNlLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2ZpcmVFdmVudCwgcmVuZGVyLCB3YWl0Rm9yfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCAncmVhY3QtbmF0aXZlLWdldC1yYW5kb20tdmFsdWVzJztcclxuaW1wb3J0IHt2NCBhcyB1dWlkdjR9IGZyb20gJ3V1aWQnO1xyXG5cclxuaW1wb3J0IEJhc2UgZnJvbSAnLi4vLi4vQXBwcy9CYXNlJztcclxuaW1wb3J0IHtsb2FkRmVhdHVyZSwgZGVmaW5lRmVhdHVyZX0gZnJvbSAnamVzdC1jdWN1bWJlcic7XHJcbmltcG9ydCB7UXVpekNvbnRleHR9IGZyb20gJy4vLi4vLi4vQXBwcy9RdWl6Q29udGV4dCc7XHJcbmNvbnN0IHV1aWQgPSB1dWlkdjQoKTtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKCcuL2ZlYXR1cmVzL2Jhc2UuZmVhdHVyZScpO1xyXG5cclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCB0ZXN0ID0+IHtcclxuICBjb25zdCBtb2NrUXVpekNvbnRleHQgPSB7XHJcbiAgICBzY29yZTogNyxcclxuICAgIHNldFNjb3JlOiBqZXN0LmZuKCksXHJcbiAgICBuYW1lOiAnY2hhbmR1JyxcclxuICAgIHNldE5hbWU6IGplc3QuZm4oKSxcclxuICAgIGVtYWlsOiAnY2hhbmRyYUBjaGFuZHUuY29tJyxcclxuICAgIHNldE1haWw6IGplc3QuZm4oKSxcclxuICAgIHBob25lOiAnMTIzNDU2Nzg5MCcsXHJcbiAgICBzZXRQaG9uZTogamVzdC5mbigpLFxyXG4gICAgc2VsZWN0ZWRWYWx1ZTogJ1JlYWN0SlMnLFxyXG4gICAgc2V0U2VsZWN0ZWQ6IGplc3QuZm4oKSxcclxuICAgIHRyYWNrU2NvcmU6IHRydWUsXHJcbiAgICBzZXRUcmFja2VyOiBqZXN0LmZuKCksXHJcbiAgfTtcclxuICB0ZXN0KCdVc2VyIHN1Ym1pdHMgZm9ybSB3aXRoIGludmFsaWQgZW1haWwnLCAoe2dpdmVuLCB3aGVuLCBhbmQsIHRoZW59KSA9PiB7XHJcbiAgICBnaXZlbignSSBhbSBvbiB0aGUgYmFzZSBzY3JlZW4nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNjcmVlbiA9IHJlbmRlcihcclxuICAgICAgICAgIDxRdWl6Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17bW9ja1F1aXpDb250ZXh0fT5cclxuICAgICAgICAgICAgPEJhc2UgLz5cclxuICAgICAgICAgIDwvUXVpekNvbnRleHQuUHJvdmlkZXI+LFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxLQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxhQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxZQUFBLEdBQUFMLE9BQUE7QUFBcUQsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBQ3JELElBQU1PLElBQUksR0FBRyxJQUFBQyxRQUFNLEdBQUU7QUFDckIsSUFBTUMsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMseUJBQXlCLENBQUM7QUFFdEQsSUFBQUMsMkJBQWEsRUFBQ0YsT0FBTyxFQUFFLFVBQUFHLElBQUksRUFBSTtFQUM3QixJQUFNQyxlQUFlLEdBQUc7SUFDdEJDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLFFBQVEsRUFBRUMsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDbkJDLElBQUksRUFBRSxRQUFRO0lBQ2RDLE9BQU8sRUFBRUgsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDbEJHLEtBQUssRUFBRSxvQkFBb0I7SUFDM0JDLE9BQU8sRUFBRUwsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDbEJLLEtBQUssRUFBRSxZQUFZO0lBQ25CQyxRQUFRLEVBQUVQLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ25CTyxhQUFhLEVBQUUsU0FBUztJQUN4QkMsV0FBVyxFQUFFVCxJQUFJLENBQUNDLEVBQUUsRUFBRTtJQUN0QlMsVUFBVSxFQUFFLElBQUk7SUFDaEJDLFVBQVUsRUFBRVgsSUFBSSxDQUFDQyxFQUFFO0VBQ3JCLENBQUM7RUFDREwsSUFBSSxDQUFDLHNDQUFzQyxFQUFFLFVBQUFnQixJQUFBLEVBQThCO0lBQUEsSUFBNUJDLEtBQUssR0FBQUQsSUFBQSxDQUFMQyxLQUFLO01BQUVDLElBQUksR0FBQUYsSUFBQSxDQUFKRSxJQUFJO01BQUVDLEdBQUcsR0FBQUgsSUFBQSxDQUFIRyxHQUFHO01BQUVDLElBQUksR0FBQUosSUFBQSxDQUFKSSxJQUFJO0lBQ25FSCxLQUFLLENBQUMseUJBQXlCLE1BQUFJLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxhQUFZO01BQzNDLE1BQU0sSUFBQUMsb0JBQU8sRUFBQyxZQUFNO1FBQ2xCLElBQU1DLE1BQU0sR0FBRyxJQUFBQyxtQkFBTSxFQUNuQixJQUFBL0IsV0FBQSxDQUFBZ0MsR0FBQSxFQUFDakMsWUFBQSxDQUFBa0MsV0FBVyxDQUFDQyxRQUFRO1VBQUNDLEtBQUssRUFBRTVCLGVBQWdCO1VBQUE2QixRQUFBLEVBQzNDLElBQUFwQyxXQUFBLENBQUFnQyxHQUFBLEVBQUNwQyxLQUFBLENBQUFnQyxPQUFJO1FBQUcsRUFDYSxDQUN4QjtNQUNILENBQUMsQ0FBQztJQUNKLENBQUMsRUFBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9