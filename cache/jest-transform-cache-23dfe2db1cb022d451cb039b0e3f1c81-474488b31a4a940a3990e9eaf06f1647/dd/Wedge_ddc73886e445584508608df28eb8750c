9330281832e4b83ae46cca1917f64ee0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _art = require("@react-native-community/art");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/aidin/workspace/aidin36/react-native-pie-chart/src/Wedge.tsx";
var Wedge = function Wedge(_ref) {
  var outerRadius = _ref.outerRadius,
    startAngle = _ref.startAngle,
    endAngle = _ref.endAngle,
    fill = _ref.fill,
    innerRadius = _ref.innerRadius;
  var circleRadians = Math.PI * 2;
  var radiansPerDegree = Math.PI / 180;
  var _degreesToRadians = function _degreesToRadians(degrees) {
    if (degrees !== 0 && degrees % 360 === 0) {
      return circleRadians;
    }
    return degrees * radiansPerDegree % circleRadians;
  };
  var _createCirclePath = function _createCirclePath(or, ir) {
    var path = new _art.Path();
    path.move(0, or).arc(or * 2, 0, or).arc(-or * 2, 0, or);
    if (ir) {
      path.move(or - ir, 0).counterArc(ir * 2, 0, ir).counterArc(-ir * 2, 0, ir);
    }
    path.close();
    return path;
  };
  var _createArcPath = function _createArcPath(or, ir) {
    var path = new _art.Path();
    var sa = _degreesToRadians(startAngle);
    var ea = _degreesToRadians(endAngle);
    var ca = sa > ea ? circleRadians - sa + ea : ea - sa;
    var ss = Math.sin(sa);
    var es = Math.sin(ea);
    var sc = Math.cos(sa);
    var ec = Math.cos(ea);
    var ds = es - ss;
    var dc = ec - sc;
    var dr = ir - or;
    var large = ca > Math.PI;
    var ARC = 4;
    var CIRCLE_X = or;
    var CIRCLE_Y = or;
    var RX = or - or / 2;
    var TwoPI = 2 * Math.PI;
    if (_reactNative.Platform.OS === 'ios' || startAngle === 0 && endAngle == 360) {
      path.move(or + or * ss, or - or * sc).arc(or * ds, or * -dc, or, or, large).line(dr * es, dr * -ec);
    } else {
      path.path.push(ARC, CIRCLE_X, CIRCLE_Y, RX, startAngle / 360 * TwoPI, startAngle / 360 * TwoPI - (endAngle - startAngle) / 360 * TwoPI, 0);
    }
    if (ir) {
      path.counterArc(ir * -ds, ir * dc, ir, ir, large);
    }
    return path;
  };
  if (startAngle - endAngle === 0) {
    return null;
  }
  var ir = Math.min(innerRadius || 0, outerRadius);
  var or = Math.max(innerRadius || 0, outerRadius);
  var path;
  if (endAngle >= startAngle + 360) {
    path = _createCirclePath(or, ir);
  } else {
    path = _createArcPath(or, ir);
  }
  if (_reactNative.Platform.OS === 'ios' || startAngle === 0 && endAngle == 360) {
    return (0, _jsxRuntime.jsx)(_art.Shape, {
      fill: fill,
      d: path
    });
  }
  var size = outerRadius * 2;
  var cy = size / 2;
  var cx = cy;
  var p = (0, _art.Path)();
  p.path.push(0, cx, cy);
  p.path.push(4, cx, cy, outerRadius, startAngle * Math.PI / 180, endAngle * Math.PI / 180, 1);
  return (0, _jsxRuntime.jsx)(_art.Shape, {
    d: p,
    fill: fill
  });
};
var _default = Wedge;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,