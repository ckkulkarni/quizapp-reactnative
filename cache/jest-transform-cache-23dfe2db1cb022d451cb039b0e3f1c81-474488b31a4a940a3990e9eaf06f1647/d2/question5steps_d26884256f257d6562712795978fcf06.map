{"version":3,"names":["_getJestObj","mock","useNavigation","jest","fn","mockReturnValue","navigate","_interopRequireDefault","require","_slicedToArray2","_asyncToGenerator2","_reactNative","_uuid","_jestCucumber","_QuizContext","_reactNative2","_native","_Question","_reactNativeDraggable","_jsxRuntime","_require","uuid","uuidv4","navigation","feature","loadFeature","defineFeature","test","mockQuizContext","score","setScore","name","setName","email","setMail","phone","setPhone","selectedValue","setSelected","trackScore","setTracker","_ref","given","when","then","and","screen","render","jsx","QuizContext","Provider","value","children","default","expect","getByTestId","toBeDefined","waitFor","props","toBe","answers","id","text","questionPositions","handleAnswerDrop","setSelectedAnswer","_render","jsxs","View","Text","map","answer","onDrag","onDragRelease","event","gestureState","questionIndex","i","length","moveY","getByText","UNSAFE_queryAllByType","_ref4","Draggable","_ref5","draggableElement","fireEvent","toBeCalled","press","toBeCalledWith","_ref7","_render2","_ref10","_ref11"],"sources":["question5.steps.tsx"],"sourcesContent":["import {fireEvent, render, waitFor} from '@testing-library/react-native';\r\nimport 'react-native-get-random-values';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {loadFeature, defineFeature} from 'jest-cucumber';\r\nimport {QuizContext} from './../../Apps/QuizContext';\r\nimport {View, Text, TextInput, Button} from 'react-native';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport Question5 from './../../Apps/Question5';\r\nimport Draggable from 'react-native-draggable';\r\nconst uuid = uuidv4();\r\n\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nconst feature = loadFeature('./features/question5.feature');\r\ndefineFeature(feature, test => {\r\n  const mockQuizContext = {\r\n    score: 0,\r\n    setScore: jest.fn(),\r\n    name: 'chandu',\r\n    setName: jest.fn(),\r\n    email: 'chandra@chandu.com',\r\n    setMail: jest.fn(),\r\n    phone: '1234567890',\r\n    setPhone: jest.fn(),\r\n    selectedValue: 'ReactJS',\r\n    setSelected: jest.fn(),\r\n    trackScore: true,\r\n    setTracker: jest.fn(),\r\n  };\r\n  test('User answers Question 5 correctly', ({given, when, then, and}) => {\r\n    given('I am on the Question 5 screen', () => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question5 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      expect(screen.getByTestId('question5-container')).toBeDefined();\r\n    });\r\n    when('I see the questions rendered properly', async () => {\r\n      await waitFor(() => {\r\n        const screen = render(\r\n          <QuizContext.Provider value={mockQuizContext}>\r\n            <Question5 />\r\n          </QuizContext.Provider>,\r\n        );\r\n        expect(screen.getByTestId('question-0').props.children).toBe(\r\n          '_ is used to avoid prop-drilling.',\r\n        );\r\n        expect(screen.getByTestId('question-1').props.children).toBe(\r\n          'ReactJS is a _ of Javascript.',\r\n        );\r\n        expect(screen.getByTestId('question-2').props.children).toBe(\r\n          '_ are created using ReactJS.',\r\n        );\r\n        expect(screen.getByTestId('question-3').props.children).toBe(\r\n          '_ is a third party ReactJS library called that is used to make API calls.',\r\n        );\r\n        expect(screen.getByTestId('question-4').props.children).toBe(\r\n          'ReactJS uses _ DOM.',\r\n        );\r\n      });\r\n    });\r\n    and(\r\n      'I drag the correct answer to the blank space, and the answer is accepted',\r\n      async () => {\r\n        const answers = [\r\n          {id: 1, text: 'Answer 1'},\r\n          {id: 2, text: 'Answer 2'},\r\n          {id: 3, text: 'Answer 3'},\r\n        ];\r\n        const questionPositions = [100, 200, 300];\r\n        const handleAnswerDrop = jest.fn();\r\n        const setSelectedAnswer = jest.fn();\r\n        const {getByText, UNSAFE_queryAllByType} = render(\r\n          <View>\r\n            <View>\r\n              <Text>Question 1</Text>\r\n              <Text>Question 2</Text>\r\n              <Text>Question 3</Text>\r\n            </View>\r\n            <View>\r\n              {answers.map(answer => (\r\n                <View key={answer.id}>\r\n                  <Draggable\r\n                    onDrag={() => setSelectedAnswer(answer.id)}\r\n                    onDragRelease={(event, gestureState) => {\r\n                      let questionIndex = -1;\r\n                      for (let i = 0; i < questionPositions.length; i++) {\r\n                        if (gestureState.moveY < questionPositions[i]) {\r\n                          questionIndex = i;\r\n                          break;\r\n                        }\r\n                      }\r\n                      if (questionIndex !== -1) {\r\n                        handleAnswerDrop(answer.id, questionIndex);\r\n                      }\r\n                    }}>\r\n                    <Text>{answer.text}</Text>\r\n                  </Draggable>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </View>,\r\n        );\r\n        const [draggableElement] = UNSAFE_queryAllByType(Draggable) || [];\r\n        await fireEvent(draggableElement, 'drag', {\r\n          moveY: 105,\r\n        });\r\n        expect(setSelectedAnswer).toBeCalled();\r\n      },\r\n    );\r\n    then(\r\n      'I press the \"Submit\" button, and it should take me to the final submission screen',\r\n      async () => {\r\n        await waitFor(() => {\r\n          const screen = render(\r\n            <QuizContext.Provider value={mockQuizContext}>\r\n              <Question5 />\r\n            </QuizContext.Provider>,\r\n          );\r\n          fireEvent.press(screen.getByTestId('submitButton'));\r\n\r\n          expect(navigation.navigate).toBeCalledWith('Final Score');\r\n        });\r\n      },\r\n    );\r\n  });\r\n  test('User answers Question 5 incorrectly', ({given, when, then, and}) => {\r\n    given('I am on the Question 5 screen', () => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Question5 />\r\n        </QuizContext.Provider>,\r\n      );\r\n      expect(screen.getByTestId('question5-container')).toBeDefined();\r\n    });\r\n    when('I see the question rendered properly', async () => {\r\n      await waitFor(() => {\r\n        const screen = render(\r\n          <QuizContext.Provider value={mockQuizContext}>\r\n            <Question5 />\r\n          </QuizContext.Provider>,\r\n        );\r\n        expect(screen.getByTestId('question-0').props.children).toBe(\r\n          '_ is used to avoid prop-drilling.',\r\n        );\r\n        expect(screen.getByTestId('question-1').props.children).toBe(\r\n          'ReactJS is a _ of Javascript.',\r\n        );\r\n        expect(screen.getByTestId('question-2').props.children).toBe(\r\n          '_ are created using ReactJS.',\r\n        );\r\n        expect(screen.getByTestId('question-3').props.children).toBe(\r\n          '_ is a third party ReactJS library called that is used to make API calls.',\r\n        );\r\n        expect(screen.getByTestId('question-4').props.children).toBe(\r\n          'ReactJS uses _ DOM.',\r\n        );\r\n      });\r\n    });\r\n    and(\r\n      'I drag an incorrect answer to the blank space, and the answer is rejected',\r\n      async () => {\r\n        const answers = [\r\n          {id: 1, text: 'Answer 1'},\r\n          {id: 2, text: 'Answer 2'},\r\n          {id: 3, text: 'Answer 3'},\r\n        ];\r\n        const questionPositions = [100, 200, 300];\r\n        const handleAnswerDrop = jest.fn();\r\n        const setSelectedAnswer = jest.fn();\r\n        const {getByText, UNSAFE_queryAllByType} = render(\r\n          <View>\r\n            <View>\r\n              <Text>Question 1</Text>\r\n              <Text>Question 2</Text>\r\n              <Text>Question 3</Text>\r\n            </View>\r\n            <View>\r\n              {answers.map(answer => (\r\n                <View key={answer.id}>\r\n                  <Draggable\r\n                    onDrag={() => setSelectedAnswer(answer.id)}\r\n                    onDragRelease={(event, gestureState) => {\r\n                      let questionIndex = -1;\r\n                      for (let i = 0; i < questionPositions.length; i++) {\r\n                        if (gestureState.moveY < questionPositions[i]) {\r\n                          questionIndex = i;\r\n                          break;\r\n                        }\r\n                      }\r\n                      if (questionIndex !== -1) {\r\n                        handleAnswerDrop(answer.id, questionIndex);\r\n                      }\r\n                    }}>\r\n                    <Text>{answer.text}</Text>\r\n                  </Draggable>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </View>,\r\n        );\r\n        const [draggableElement] = UNSAFE_queryAllByType(Draggable) || [];\r\n        await fireEvent(draggableElement, 'drag', {\r\n          moveY: 155,\r\n        });\r\n        expect(setSelectedAnswer).toBeCalled();\r\n      },\r\n    );\r\n  });\r\n});\r\n"],"mappings":"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"}